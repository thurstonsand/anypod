name: "Update Dockerfile Dependencies"

permissions:
  contents: write

on:
  workflow_dispatch: # Allow manual triggering
  schedule:
    - cron: "0 1 * * *" # Runs daily at 01:00 UTC

jobs:
  update-and-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ssh-key: ${{ secrets.ANYPOD_DEPLOY_KEY }}

      - name: Update Dockerfile if needed
        id: update
        run: |
          set -euo pipefail

          # Update bgutil provider to latest version
          LATEST=$(curl -s https://api.github.com/repos/brainicism/bgutil-ytdlp-pot-provider/releases/latest | jq -r '.tag_name')
          sed -i "s/^ARG BGUTIL_POT_PROVIDER_VERSION=.*/ARG BGUTIL_POT_PROVIDER_VERSION=${LATEST}/" Dockerfile

          # Update cache bust key to current week (forces package refresh)
          CURRENT_WEEK=$(date +%Y-W%V)
          sed -i "s/^ARG CACHE_BUST_WEEK=.*/ARG CACHE_BUST_WEEK=${CURRENT_WEEK}/" Dockerfile

          # Check if anything actually changed
          if git diff --quiet Dockerfile; then
            echo "has_changes=false" >> "$GITHUB_OUTPUT"
            echo "No changes needed"
          else
            echo "has_changes=true" >> "$GITHUB_OUTPUT"
            echo "Dockerfile updated"
          fi

      - name: Install uv
        if: steps.update.outputs.has_changes == 'true'
        uses: astral-sh/setup-uv@v6
        with:
          version: latest
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Run pre-commit checks
        if: steps.update.outputs.has_changes == 'true'
        uses: pre-commit/action@v3.0.1

      - name: Run tests
        if: steps.update.outputs.has_changes == 'true'
        run: |
          uv run pytest --cov-report xml

      - name: Commit and push
        if: steps.update.outputs.has_changes == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git add Dockerfile
          git commit -m "chore(deps): update dependencies and refresh package cache

          Auto-update performed by GitHub Actions after validating:
            - Dockerfile updated successfully
            - Pre-commit checks passed
            - All tests passed"
          git push origin main
